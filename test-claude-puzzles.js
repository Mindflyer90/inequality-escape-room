#!/usr/bin/env node

/**
 * Test Claude-generated puzzles at different difficulty levels
 */

const API_URL = process.env.API_URL || 'http://localhost:3000';

async function testClaudePuzzles() {
  console.log('üß™ Testing Claude Puzzle Generation\n');

  const difficulties = ['easy', 'medium', 'hard'];

  for (const difficulty of difficulties) {
    console.log(`\nüìù Testing ${difficulty.toUpperCase()} difficulty:`);
    console.log('‚îÄ'.repeat(50));

    try {
      const response = await fetch(`${API_URL}/api/puzzle/generate`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ difficulty })
      });

      if (!response.ok) {
        throw new Error(`Failed to generate puzzle: ${response.statusText}`);
      }

      const puzzle = await response.json();

      console.log(`Inequality: ${puzzle.inequality}`);
      console.log(`Solution:   ${puzzle.solution}`);
      console.log(`Generated by: ${puzzle.generatedBy || 'unknown'}`);
      
      if (puzzle.steps && puzzle.steps.length > 0) {
        console.log(`Steps:`);
        puzzle.steps.forEach((step, i) => {
          console.log(`  ${i + 1}. ${step}`);
        });
      }

      // Test hint generation for this puzzle
      console.log('\nüí° Testing hint generation:');
      const hintResponse = await fetch(`${API_URL}/api/hint/generate`, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          puzzleId: puzzle.id,
          inequality: puzzle.inequality,
          hintsUsed: 0
        })
      });

      if (hintResponse.ok) {
        const hintData = await hintResponse.json();
        console.log(`Hint: ${hintData.hint.substring(0, 150)}...`);
      }

    } catch (error) {
      console.error(`‚ùå Error testing ${difficulty}:`, error.message);
    }
  }

  console.log('\n\n‚ú® Claude puzzle generation test complete!');
}

testClaudePuzzles();
